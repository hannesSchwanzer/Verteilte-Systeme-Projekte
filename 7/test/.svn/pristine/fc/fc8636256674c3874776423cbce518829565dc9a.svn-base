#
# Test subscribe to /pension/hamster/ID/fondle topic:
#
# Run program, publish manually, see if program responds
#
set test_name "subscribe fondle"


# start program with given ID
# puts "calling: ./$tool -i $hamster_uuid -s $host"
spawn ./$tool -i $hamster_uuid -s $host
set hamster_id $spawn_id

# wait a sec before expecting response
after 1000

set spawn_id $hamster_id
expect {
	timeout {
		fail "$test_name: timeout waiting for menu\n"
	}	
	eof {
		fail "$test_name: unexpected EOF waiting for menu\n"
	}
	"Commands:" {
			pass "$test_name: Menu showing up\n"
		}
	default {
		fail "$test_name: unexpected response waiting for $outputs\n"
	}
}


# call mosquitto_pub to fondle hamster:
# puts "calling mosquitto_pub -h $host -t \"/pension/hamster/$hamster_uuid/fondle\" -u admin -m fondle"
spawn mosquitto_pub -h $host -t "/pension/hamster/$hamster_uuid/fondle" -u admin -m fondle

set spawn_id $hamster_id
expect {
	timeout {
		fail "$test_name: timeout waiting for fondle\n"
	}
	eof {
		fail "$test_name: unexpected EOF waiting for fondle\n"
	}
	-nocase "Hmmm" {
			pass "$test_name: Fondle received: $expect_out(buffer)"
	}
	-nocase "Mhhh" {
			pass "$test_name: Fondle received: $expect_out(buffer)"
	}
	-nocase "fondle" {
			pass "$test_name: Fondle received: $expect_out(buffer)"
	}
	":-)" {
			pass "$test_name: Fondle received: $expect_out(buffer)"
	}
	-nocase "streich" {
			pass "$test_name: Fondle received: $expect_out(buffer)"
	}
	default {
		fail "$test_name: unexpected response waiting for $outputs\n"
	}
}

# send "q" to end the program
set spawn_id $hamster_id
send "q\n"
wait
